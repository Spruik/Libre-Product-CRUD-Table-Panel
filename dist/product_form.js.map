{"version":3,"sources":["../src/product_form.js"],"names":["_","utils","apis","_onAddApplicator","length","scope","productFormModal","ingredient","applicators","maxApplicatorNum","applicator","id","operation","operationSeq","operationId","targetGOS","targetTol","materials","seriseId","materialId","oz","gramsOnScale","gramsTotal","tolerance","meta","isTotalReadOnly","push","_onAddSubMaterial","topId","maxMaterialNum","material","isMaterialValid","materialsModelList","forEach","app","m","name","diffItems","difference","alert","matchOperation","val","toGet","filter","x","sequence","updateGramsTotalAccumulatively","form","isTotalCalcOn","apps","arr","i","item","k","mat","Number","reduce","num","toFixed","getSumByKey","key","updateTargetNum","matchMaterial","undefined","split","desc","target","description","addPreprocess","group","currentFilterGroup","productGroups","productGroup","productDesc","comment","func","onAddApplicator","onRemoveApplicator","pop","onAddSubMaterial","onRemoveSubMaterial","onOperationChanged","onScaleChanged","onTotalCheckChanged","onMaterialChanged","submitBtnMsg","onSubmit","product","selectedOperations","map","setArr","Array","from","Set","products","findProductById","findProductByDesc","materialsDataList","addProduct","successCallBack","failCallBack","e","viewPreprocess","cur","currentProduct","productFormViewModal","product_group","productId","product_desc","updatePreprocess","copy","tempProductForm","match","hasObjectChanged","updateProduct","showAddProductFormModal","showLargeModal","showViewProductFormModal","showUpdateProductFormModal","removeProduct","confirmModal","confirmMsg","onConfirm","showModal"],"mappings":"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","file":"product_form.js","sourcesContent":["import _ from 'lodash'\nimport * as utils from './utils'\nimport * as apis from './apis'\n\n\nconst _onAddApplicator = scope => {\n  const length = scope.productFormModal.ingredient.applicators.length\n  const maxApplicatorNum =10\n  if (length >= maxApplicatorNum) { return }\n  const applicator = {\n    id: length + 1,\n    operation: '',\n    operationSeq: null,\n    operationId: null,\n    targetGOS: null,\n    targetTol: 0,\n    materials: [\n      {\n        seriseId: 1,\n        materialId: \"\",\n        oz: null,\n        gramsOnScale: null,\n        gramsTotal: null,\n        tolerance: 0,\n        meta: {\n          isTotalReadOnly: true\n        }\n      }\n    ]\n  }\n  scope.productFormModal.ingredient.applicators.push(applicator)\n}\n\nconst _onAddSubMaterial = (scope, topId) => {\n  const length = scope.productFormModal.ingredient.applicators[topId - 1].materials.length\n  const maxMaterialNum = 8\n  if (length >= maxMaterialNum) { return }\n  const material = {\n    seriseId: length + 1,\n    materialId: \"\",\n    oz: null,\n    gramsOnScale: null,\n    gramsTotal: null,\n    tolerance: 0,\n    meta: {\n      isTotalReadOnly: true\n    }\n  }\n\n  scope.productFormModal.ingredient.applicators[topId - 1].materials.push(material)\n}\n\nconst isMaterialValid = (ingredient, materialsModelList) => {\n  let materials = []\n  ingredient.applicators.forEach(app => {\n    app.materials.forEach(m => {\n      materials.push(m.name)\n    })\n  })\n  \n  const diffItems = _.difference(materials, materialsModelList)\n  if (diffItems.length !== 0) {\n    utils.alert('warning', 'Material Not Exists', `The material ${diffItems[0]} does not exist, please either add it to the material list or select the exact item that the input field suggests`)\n    return false\n  }\n\n  return true\n}\n\nconst matchOperation = (scope, val, toGet) => {\n  if (toGet === 'id') {\n    return scope.operationSeq.filter(x => x.name === val)[0].id\n  }else if (toGet === 'seq') {\n    return scope.operationSeq.filter(x => x.name === val)[0].sequence\n  }else {\n    return 0\n  }\n}\n\nconst updateGramsTotalAccumulatively = (form) => {\n  if (!form.isTotalCalcOn) { return }\n  const apps = form.ingredient.applicators\n  if (!apps) { return }\n\n  let arr = []\n  for (let i = 0; i < apps.length; i++) {\n    const item = apps[i];\n    for (let k = 0; k < item.materials.length; k++) {\n      const mat = item.materials[k];\n      mat.gramsTotal = Number((mat.gramsOnScale + Number(arr.reduce((num, x) => num += x, 0).toFixed(2))).toFixed(2))\n      arr.push(mat.gramsOnScale)\n    }\n  }\n\n}\n\nconst getSumByKey = (app, key, form) => {\n  if (key === 'gos'){\n    updateGramsTotalAccumulatively(form)\n    return Number(app.materials.reduce((num, x) => num += x.gramsOnScale || 0, 0).toFixed(2))\n  }else if (key === 'tol'){\n    return Number(app.materials.reduce((num, x) => num += x.tolerance || 0, 0).toFixed(2))\n  }else {\n    return 0\n  }\n}\n\nconst updateTargetNum = app => {\n  app.targetGOS = Number(app.materials.reduce((num, x) => num += x.gramsOnScale || 0, 0).toFixed(2))\n  app.targetTol = Number(app.materials.reduce((num, x) => num += x.tolerance || 0, 0).toFixed(2))\n}\n\nconst  matchMaterial = (scope, val) => {\n  if (val === undefined || val === null) return 0\n  const name = val.split(' | ')[0]\n  const desc = val.split(' | ')[1]\n  const target = scope.materials.filter(x => x.name === name && x.description === desc)[0]\n  return target ? target.id : 0\n}\n\nconst addPreprocess = scope => {\n  //init data\n\n  const group = scope.currentFilterGroup === 'All' ? scope.productGroups[0] || \"\" : scope.currentFilterGroup\n\n  scope.productFormModal = {\n    isTotalCalcOn: true,\n    productGroup: group,\n    id: null,\n    productDesc: \"\",\n    comment: \"\",\n    ingredient: {\n      applicators: [\n        {\n          id: 1,\n          operation: '',\n          operationSeq: null,\n          operationId: null,\n          targetGOS: null,\n          targetTol: 0,\n          materials: [\n            {\n              seriseId: 1,\n              materialId: \"\",\n              oz: null,\n              gramsOnScale: null,\n              gramsTotal: null,\n              tolerance: 0,\n              meta: {\n                isTotalReadOnly: true\n              }\n            }\n          ]\n        }\n      ]\n    },\n    func: {\n      onAddApplicator: () => {\n        _onAddApplicator(scope)\n      },\n      onRemoveApplicator: () => { \n        const apps = scope.productFormModal.ingredient.applicators\n        apps.pop() \n        updateGramsTotalAccumulatively(scope.productFormModal)\n      },\n      onAddSubMaterial: (topId) => {\n        _onAddSubMaterial(scope, topId)\n      },\n      onRemoveSubMaterial: (id) => {\n        const apps = scope.productFormModal.ingredient.applicators\n        apps[id-1].materials.pop() \n        updateGramsTotalAccumulatively(scope.productFormModal)\n        updateTargetNum(apps[id-1])\n      },\n      onOperationChanged: (val, toGet) => {\n        return matchOperation(scope, val, toGet)\n      },\n      onScaleChanged: (applicator, key) => {\n        return getSumByKey(applicator, key, scope.productFormModal)\n      },\n      onTotalCheckChanged: () => {\n        updateGramsTotalAccumulatively(scope.productFormModal)\n      },\n      onMaterialChanged: (val) => {\n        return matchMaterial(scope, val)\n      },\n      toFixed: (val) => {\n        if (val === undefined || val === null) return\n        return Number(val.toFixed(2))\n      }\n    },\n    submitBtnMsg: 'Submit'\n  }\n\n  scope.productFormModal.func.onSubmit = () => {\n    const product = scope.productFormModal\n\n    if (!product.ingredient.applicators) {\n      utils.alert('warning', 'Warning', `No material can be found on this product`)\n      return\n    }\n\n    const selectedOperations = scope.productFormModal.ingredient.applicators.map(x => x.operation)\n    const setArr = Array.from(new Set(selectedOperations))\n    if (selectedOperations.length !== setArr.length) {\n      utils.alert('warning', 'Warning', `The same operation CANNOT be selected TWICE!`)\n      return\n    }\n\n    if (scope.products) {\n      if (utils.findProductById(scope.products, product.id).length !== 0) {\n        utils.alert('warning', 'Warning', `Product With Product ID \"${product.id}\" Already Exists`)\n        return\n      }\n\n      if (utils.findProductByDesc(scope.products, product.productDesc).length !== 0) {\n        utils.alert('warning', 'Warning', `Product With Product Description \"${product.productDesc}\" Already Exists`)\n        return\n      }\n    }\n\n    if (!isMaterialValid(product.ingredient, scope.materialsDataList)) { return }\n\n    apis.addProduct(\n      product,\n      utils.successCallBack('pct-product-form-cancelBtn', 'Product Has Been Added Successfully', scope),\n      e => utils.failCallBack('pct-product-form-cancelBtn', `An Error Occurr While Adding The Product Due To ${e}`)\n    )\n  }\n}\n\n/**\n * Data init for viewing product\n * @param {*} scope \n */\nconst viewPreprocess = scope => {\n  const cur = scope.currentProduct\n  scope.productFormViewModal = {\n    productGroup: cur.product_group,\n    productId: cur.id,\n    productDesc: cur.product_desc,\n    comment: cur.comment || \"\",\n    ingredient: cur.ingredient,\n  }\n}\n\n/**\n * Data init for updating product\n * @param {*} scope \n */\nconst updatePreprocess = scope => {\n\n  const cur = utils.copy(scope.currentProduct) \n\n  scope.productFormModal = {\n    isTotalCalcOn: true,\n    productGroup: cur.product_group,\n    id: cur.id,\n    productDesc: cur.product_desc,\n    comment: cur.comment || \"\",\n    ingredient: cur.ingredient,\n    func: {\n      onAddApplicator: () => {\n        _onAddApplicator(scope)\n      },\n      onRemoveApplicator: () => { \n        const apps = scope.productFormModal.ingredient.applicators\n        apps.pop() \n        updateGramsTotalAccumulatively(scope.productFormModal)\n      },\n      onAddSubMaterial: (topId) => {\n        _onAddSubMaterial(scope, topId)\n      },\n      onRemoveSubMaterial: (id) => {\n        const apps = scope.productFormModal.ingredient.applicators\n        apps[id-1].materials.pop() \n        updateGramsTotalAccumulatively(scope.productFormModal)\n        updateTargetNum(apps[id-1])\n      },\n      onOperationChanged: (val, toGet) => {\n        return matchOperation(scope, val, toGet)\n      },\n      onScaleChanged: (applicator, key) => {\n        return getSumByKey(applicator, key, scope.productFormModal)\n      },\n      onTotalCheckChanged: () => {\n        updateGramsTotalAccumulatively(scope.productFormModal)\n      },\n      onMaterialChanged: (val) => {\n        return matchMaterial(scope, val)\n      },\n      toFixed: (val) => {\n        if (val === undefined || val === null) return\n        return Number(val.toFixed(2))\n      }\n    },\n    submitBtnMsg: 'Update'\n  }\n\n  scope.tempProductForm = utils.copy(scope.productFormModal)\n\n  scope.productFormModal.func.onSubmit = () => {\n\n    const product = scope.productFormModal\n    const match = utils.findProductById(scope.products, product.id)\n\n    //Check if make any changes\n    if (!utils.hasObjectChanged(scope.tempProductForm, product)) {\n      utils.alert('warning', 'Warning', `You Did Not Make Any Changes On It`)\n      return\n    }\n\n    // check if there is any operation selected twice\n    const selectedOperations = scope.productFormModal.ingredient.applicators.map(x => x.operation)\n    const setArr = Array.from(new Set(selectedOperations))\n    if (selectedOperations.length !== setArr.length) {\n      utils.alert('warning', 'Warning', `The same operation CANNOT be selected TWICE!`)\n      return\n    }\n\n    //Check if id is invalid\n    if (match.length !== 0) {\n      if (match[0].id !== cur.id) {\n        utils.alert('warning', 'Warning', `Product With Product ID \"${product.id}\" Already Exists`)\n        return\n      }\n    }\n\n    if (!isMaterialValid(product.ingredient, scope.materialsDataList)) { return }\n\n    apis.updateProduct(\n      cur.id,\n      scope.tempProductForm.ingredient,\n      product,\n      utils.successCallBack('pct-product-form-cancelBtn', 'Product Has Been Updated Successfully', scope),\n      e => utils.failCallBack('pct-product-form-cancelBtn', `An Error Occurr While Updating The Product Due To ${e}`)\n    )\n  }\n}\n\nexport const showAddProductFormModal = scope => {\n  addPreprocess(scope)\n  utils.showLargeModal('product_form.html', scope)\n}\n\nexport const showViewProductFormModal = scope => {\n  viewPreprocess(scope)\n  utils.showLargeModal('product_form_view.html', scope)\n}\n\nexport const showUpdateProductFormModal = scope => {\n  updatePreprocess(scope)\n  utils.showLargeModal('product_form.html', scope)\n}\n\nexport const removeProduct = scope => {\n  const id = scope.currentProduct.id\n  scope.confirmModal = {\n    confirmMsg: `Please confirm that you want to remove product ${id}`,\n    onConfirm: () => {\n      apis.removeProduct(\n        id, \n        utils.successCallBack('pct-confirm-modal-cancelBtn', `Product ${id} Has Been Removed Successfully`, scope),\n        e => utils.failCallBack('pct-confirm-modal-cancelBtn', `An Error Occurr While Removing The Product Due To ${e}`)\n      )\n    }\n  }\n  utils.showModal('confirm_modal.html', scope)\n}"]}