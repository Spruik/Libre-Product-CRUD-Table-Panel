{"version":3,"sources":["../src/product_form.js"],"names":["_","utils","apis","_onAddApplicator","length","scope","productFormModal","ingredient","applicators","maxApplicatorNum","applicator","id","materials","seriseId","materialId","oz","gramsOnScale","gramsTotal","tolerance","push","_onAddSubMaterial","topId","maxMaterialNum","material","isMaterialValid","materialsModelList","crust","name","sauce","forEach","app","m","diffItems","difference","alert","addPreprocess","group","currentFilterGroup","productGroups","productGroup","productId","productDesc","comment","func","onAddApplicator","onRemoveApplicator","pop","onAddSubMaterial","onRemoveSubMaterial","submitBtnMsg","onSubmit","product","findProductById","products","findProductByDesc","materialsDataList","addProduct","successCallBack","failCallBack","e","viewPreprocess","cur","currentProduct","productFormViewModal","product_group","product_id","product_desc","updatePreprocess","tempProductForm","copy","match","hasObjectChanged","updateProduct","showAddProductFormModal","showLargeModal","showViewProductFormModal","showUpdateProductFormModal","removeProduct","confirmModal","confirmMsg","onConfirm","showModal"],"mappings":"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","file":"product_form.js","sourcesContent":["import _ from 'lodash'\nimport * as utils from './utils'\nimport * as apis from './apis'\n\n\nconst _onAddApplicator = scope => {\n  const length = scope.productFormModal.ingredient.applicators.length\n  const maxApplicatorNum = 10\n  if (length >= maxApplicatorNum) { return }\n  const applicator = {\n    id: length + 1,\n    materials: [\n      {\n        seriseId: 1,\n        materialId: \"\",\n        oz: null,\n        gramsOnScale: null,\n        gramsTotal: null,\n        tolerance: 0\n      }\n    ]\n  }\n  scope.productFormModal.ingredient.applicators.push(applicator)\n}\n\nconst _onAddSubMaterial = (scope, topId) => {\n  const length = scope.productFormModal.ingredient.applicators[topId - 1].materials.length\n  const maxMaterialNum = 5\n  if (length >= maxMaterialNum) { return }\n  const material = {\n    seriseId: length + 1,\n    materialId: \"\",\n    oz: null,\n    gramsOnScale: null,\n    gramsTotal: null,\n    tolerance: 0\n  }\n\n  scope.productFormModal.ingredient.applicators[topId - 1].materials.push(material)\n}\n\nconst isMaterialValid = (ingredient, materialsModelList) => {\n  let materials = [ingredient.crust.name, ingredient.sauce.name]\n  ingredient.applicators.forEach(app => {\n    app.materials.forEach(m => {\n      materials.push(m.name)\n    })\n  })\n  \n  const diffItems = _.difference(materials, materialsModelList)\n  if (diffItems.length !== 0) {\n    utils.alert('warning', 'Material Not Exists', `The material ${diffItems[0]} does not exist, please either add it to the material list or select the exact item that the input field suggests`)\n    return false\n  }\n\n  return true\n}\n\nconst addPreprocess = scope => {\n  //init data\n\n  const group = scope.currentFilterGroup === 'All' ? scope.productGroups[0] || \"\" : scope.currentFilterGroup\n\n  scope.productFormModal = {\n    productGroup: group,\n    productId: null,\n    productDesc: \"\",\n    comment: \"\",\n    ingredient: {\n      crust: {\n        name: \"\",\n        oz: null,\n        materialId: \"\",\n        gramsOnScale: null,\n        gramsTotal: null,\n        tolerance: 0\n      },\n      sauce: {\n        name: \"\",\n        oz: null,\n        materialId: \"\",\n        gramsOnScale: null,\n        gramsTotal: null,\n        tolerance: 0\n      },\n      applicators: [\n        {\n          id: 1,\n          materials: [\n            {\n              seriseId: 1,\n              materialId: \"\",\n              oz: null,\n              gramsOnScale: null,\n              gramsTotal: null,\n              tolerance: 0\n            }\n          ]\n        }\n      ]\n    },\n    func: {\n      onAddApplicator: () => {\n        _onAddApplicator(scope)\n      },\n      onRemoveApplicator: () => { \n        scope.productFormModal.ingredient.applicators.pop() \n      },\n      onAddSubMaterial: (topId) => {\n        _onAddSubMaterial(scope, topId)\n      },\n      onRemoveSubMaterial: (id) => {\n        scope.productFormModal.ingredient.applicators[id-1].materials.pop() \n      }\n    },\n    submitBtnMsg: 'Submit'\n  }\n\n  scope.productFormModal.func.onSubmit = () => {\n    const product = scope.productFormModal\n    \n    if (utils.findProductById(scope.products, product.productId).length !== 0) {\n      utils.alert('warning', 'Warning', `Product With Product ID \"${product.productId}\" Already Exists`)\n      return\n    }\n\n    if (utils.findProductByDesc(scope.products, product.productDesc).length !== 0) {\n      utils.alert('warning', 'Warning', `Product With Product Description \"${product.productDesc}\" Already Exists`)\n      return\n    }\n\n    if (!isMaterialValid(product.ingredient, scope.materialsDataList)) { return }\n\n    apis.addProduct(\n      product.productGroup, \n      product.productDesc, \n      product.productId, \n      product.comment,\n      product.ingredient,\n      utils.successCallBack('pct-product-form-cancelBtn', 'Product Has Been Added Successfully', scope),\n      e => utils.failCallBack('pct-product-form-cancelBtn', `An Error Occurr While Adding The Product Due To ${e}`)\n    )\n  }\n}\n\n/**\n * Data init for viewing product\n * @param {*} scope \n */\nconst viewPreprocess = scope => {\n  const cur = scope.currentProduct\n  scope.productFormViewModal = {\n    productGroup: cur.product_group,\n    productId: cur.product_id,\n    productDesc: cur.product_desc,\n    comment: cur.comment || \"\",\n    ingredient: cur.ingredient,\n  }\n}\n\n/**\n * Data init for updating product\n * @param {*} scope \n */\nconst updatePreprocess = scope => {\n\n  const cur = scope.currentProduct\n\n  scope.productFormModal = {\n    productGroup: cur.product_group,\n    productId: cur.product_id,\n    productDesc: cur.product_desc,\n    comment: cur.comment || \"\",\n    ingredient: cur.ingredient,\n    func: {\n      onAddApplicator: () => {\n        _onAddApplicator(scope)\n      },\n      onRemoveApplicator: () => { \n        scope.productFormModal.ingredient.applicators.pop() \n      },\n      onAddSubMaterial: (topId) => {\n        _onAddSubMaterial(scope, topId)\n      },\n      onRemoveSubMaterial: (id) => {\n        scope.productFormModal.ingredient.applicators[id-1].materials.pop() \n      }\n    },\n    submitBtnMsg: 'Update'\n  }\n\n  scope.tempProductForm = utils.copy(scope.productFormModal)\n\n  scope.productFormModal.func.onSubmit = () => {\n\n    const product = scope.productFormModal\n    const match = utils.findProductById(scope.products, product.productId)\n\n    //Check if make any changes\n    if (!utils.hasObjectChanged(scope.tempProductForm, product)) {\n      utils.alert('warning', 'Warning', `You Did Not Make Any Changes On It`)\n      return\n    }\n\n    //Check if id is invalid\n    if (match.length !== 0) {\n      if (match[0].product_id !== cur.product_id) {\n        utils.alert('warning', 'Warning', `Product With Product ID \"${product.productId}\" Already Exists`)\n        return\n      }\n    }\n\n    if (!isMaterialValid(product.ingredient, scope.materialsDataList)) { return }\n\n    apis.updateProduct(\n      cur.product_id,\n      product.productGroup,\n      product.productDesc,\n      product.productId,\n      product.comment,\n      product.ingredient,\n      utils.successCallBack('pct-product-form-cancelBtn', 'Product Has Been Updated Successfully', scope),\n      e => utils.failCallBack('pct-product-form-cancelBtn', `An Error Occurr While Updating The Product Due To ${e}`)\n    )\n  }\n}\n\nexport const showAddProductFormModal = scope => {\n  addPreprocess(scope)\n  utils.showLargeModal('product_form.html', scope)\n}\n\nexport const showViewProductFormModal = scope => {\n  viewPreprocess(scope)\n  utils.showLargeModal('product_form_view.html', scope)\n}\n\nexport const showUpdateProductFormModal = scope => {\n  updatePreprocess(scope)\n  utils.showLargeModal('product_form.html', scope)\n}\n\nexport const removeProduct = scope => {\n  const id = scope.currentProduct.product_id\n  scope.confirmModal = {\n    confirmMsg: `Please confirm that you want to remove product ${id}`,\n    onConfirm: () => {\n      apis.removeProduct(\n        id, \n        utils.successCallBack('pct-confirm-modal-cancelBtn', `Product ${id} Has Been Removed Successfully`, scope),\n        e => utils.failCallBack('pct-confirm-modal-cancelBtn', `An Error Occurr While Removing The Product Due To ${e}`)\n      )\n    }\n  }\n  utils.showModal('confirm_modal.html', scope)\n}"]}