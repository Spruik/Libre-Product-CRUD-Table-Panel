{"version":3,"sources":["../src/product_form.js"],"names":["_","utils","apis","_onAddApplicator","length","scope","productFormModal","ingredient","applicators","maxApplicatorNum","applicator","id","operation","operationSeq","operationId","targetGOS","targetTol","materials","seriseId","materialId","oz","gramsOnScale","gramsTotal","tolerance","meta","isTotalReadOnly","push","_onAddSubMaterial","topId","maxMaterialNum","material","isMaterialValid","materialsModelList","forEach","app","m","name","diffItems","difference","alert","matchOperation","val","toGet","filter","x","sequence","updateGramsTotalAccumulatively","form","isTotalCalcOn","apps","arr","i","item","k","mat","reducer","num","Number","reduce","toFixed","reducerGramsOnScale","reducerTolerance","getSumByKey","key","updateTargetNum","matchMaterial","undefined","split","desc","target","description","addPreprocess","group","currentFilterGroup","productGroups","productGroup","productDesc","comment","func","onAddApplicator","onRemoveApplicator","pop","onAddSubMaterial","onRemoveSubMaterial","onOperationChanged","onScaleChanged","onTotalCheckChanged","onMaterialChanged","submitBtnMsg","onSubmit","product","selectedOperations","map","setArr","Array","from","Set","products","findProductById","findProductByDesc","materialsDataList","addProduct","successCallBack","failCallBack","e","viewPreprocess","cur","currentProduct","productFormViewModal","product_group","productId","product_desc","updatePreprocess","copy","tempProductForm","match","hasObjectChanged","updateProduct","showAddProductFormModal","showLargeModal","showViewProductFormModal","showUpdateProductFormModal","removeProduct","confirmModal","confirmMsg","onConfirm","showModal"],"mappings":"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","file":"product_form.js","sourcesContent":["import _ from 'lodash'\r\nimport * as utils from './utils'\r\nimport * as apis from './apis'\r\n\r\nconst _onAddApplicator = scope => {\r\n  const length = scope.productFormModal.ingredient.applicators.length\r\n  const maxApplicatorNum = 10\r\n  if (length >= maxApplicatorNum) { return }\r\n  const applicator = {\r\n    id: length + 1,\r\n    operation: '',\r\n    operationSeq: null,\r\n    operationId: null,\r\n    targetGOS: null,\r\n    targetTol: 0,\r\n    materials: [\r\n      {\r\n        seriseId: 1,\r\n        materialId: '',\r\n        oz: null,\r\n        gramsOnScale: null,\r\n        gramsTotal: null,\r\n        tolerance: 0,\r\n        meta: {\r\n          isTotalReadOnly: true\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  scope.productFormModal.ingredient.applicators.push(applicator)\r\n}\r\n\r\nconst _onAddSubMaterial = (scope, topId) => {\r\n  const length = scope.productFormModal.ingredient.applicators[topId - 1].materials.length\r\n  const maxMaterialNum = 8\r\n  if (length >= maxMaterialNum) { return }\r\n  const material = {\r\n    seriseId: length + 1,\r\n    materialId: '',\r\n    oz: null,\r\n    gramsOnScale: null,\r\n    gramsTotal: null,\r\n    tolerance: 0,\r\n    meta: {\r\n      isTotalReadOnly: true\r\n    }\r\n  }\r\n\r\n  scope.productFormModal.ingredient.applicators[topId - 1].materials.push(material)\r\n}\r\n\r\nconst isMaterialValid = (ingredient, materialsModelList) => {\r\n  const materials = []\r\n  ingredient.applicators.forEach(app => {\r\n    app.materials.forEach(m => {\r\n      materials.push(m.name)\r\n    })\r\n  })\r\n\r\n  const diffItems = _.difference(materials, materialsModelList)\r\n  if (diffItems.length !== 0) {\r\n    utils.alert('warning', 'Material Not Exists', `The material ${diffItems[0]} does not exist, please either add it to the material list or select the exact item that the input field suggests`)\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nconst matchOperation = (scope, val, toGet) => {\r\n  if (toGet === 'id') {\r\n    return scope.operationSeq.filter(x => x.name === val)[0].id\r\n  } else if (toGet === 'seq') {\r\n    return scope.operationSeq.filter(x => x.name === val)[0].sequence\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\nconst updateGramsTotalAccumulatively = (form) => {\r\n  if (!form.isTotalCalcOn) { return }\r\n  const apps = form.ingredient.applicators\r\n  if (!apps) { return }\r\n\r\n  const arr = []\r\n  for (let i = 0; i < apps.length; i++) {\r\n    const item = apps[i]\r\n    for (let k = 0; k < item.materials.length; k++) {\r\n      const mat = item.materials[k]\r\n      const reducer = (num, x) => { return num + x }\r\n      mat.gramsTotal = Number((mat.gramsOnScale + Number(arr.reduce(reducer, 0).toFixed(2))).toFixed(2))\r\n      arr.push(mat.gramsOnScale)\r\n    }\r\n  }\r\n}\r\n\r\nconst reducerGramsOnScale = (num, x) => { return num + x.gramsOnScale || 0 }\r\nconst reducerTolerance = (num, x) => { return num + x.tolerance || 0 }\r\n\r\nconst getSumByKey = (app, key, form) => {\r\n  if (key === 'gos') {\r\n    updateGramsTotalAccumulatively(form)\r\n    return Number(app.materials.reduce(reducerGramsOnScale, 0).toFixed(2))\r\n  } else if (key === 'tol') {\r\n    return Number(app.materials.reduce(reducerTolerance, 0).toFixed(2))\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\nconst updateTargetNum = app => {\r\n  app.targetGOS = Number(app.materials.reduce(reducerGramsOnScale, 0).toFixed(2))\r\n  app.targetTol = Number(app.materials.reduce(reducerTolerance, 0).toFixed(2))\r\n}\r\n\r\nconst matchMaterial = (scope, val) => {\r\n  if (val === undefined || val === null) return 0\r\n  const name = val.split(' | ')[0]\r\n  const desc = val.split(' | ')[1]\r\n  const target = scope.materials.filter(x => x.name === name && x.description === desc)[0]\r\n  return target ? target.id : 0\r\n}\r\n\r\nconst addPreprocess = scope => {\r\n  // init data\r\n\r\n  const group = scope.currentFilterGroup === 'All' ? scope.productGroups[0] || '' : scope.currentFilterGroup\r\n\r\n  scope.productFormModal = {\r\n    isTotalCalcOn: true,\r\n    productGroup: group,\r\n    id: null,\r\n    productDesc: '',\r\n    comment: '',\r\n    ingredient: {\r\n      applicators: [\r\n        {\r\n          id: 1,\r\n          operation: '',\r\n          operationSeq: null,\r\n          operationId: null,\r\n          targetGOS: null,\r\n          targetTol: 0,\r\n          materials: [\r\n            {\r\n              seriseId: 1,\r\n              materialId: '',\r\n              oz: null,\r\n              gramsOnScale: null,\r\n              gramsTotal: null,\r\n              tolerance: 0,\r\n              meta: {\r\n                isTotalReadOnly: true\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    func: {\r\n      onAddApplicator: () => {\r\n        _onAddApplicator(scope)\r\n      },\r\n      onRemoveApplicator: () => {\r\n        const apps = scope.productFormModal.ingredient.applicators\r\n        apps.pop()\r\n        updateGramsTotalAccumulatively(scope.productFormModal)\r\n      },\r\n      onAddSubMaterial: (topId) => {\r\n        _onAddSubMaterial(scope, topId)\r\n      },\r\n      onRemoveSubMaterial: (id) => {\r\n        const apps = scope.productFormModal.ingredient.applicators\r\n        apps[id - 1].materials.pop()\r\n        updateGramsTotalAccumulatively(scope.productFormModal)\r\n        updateTargetNum(apps[id - 1])\r\n      },\r\n      onOperationChanged: (val, toGet) => {\r\n        return matchOperation(scope, val, toGet)\r\n      },\r\n      onScaleChanged: (applicator, key) => {\r\n        return getSumByKey(applicator, key, scope.productFormModal)\r\n      },\r\n      onTotalCheckChanged: () => {\r\n        updateGramsTotalAccumulatively(scope.productFormModal)\r\n      },\r\n      onMaterialChanged: (val) => {\r\n        return matchMaterial(scope, val)\r\n      },\r\n      toFixed: (val) => {\r\n        if (val === undefined || val === null) return\r\n        return Number(val.toFixed(2))\r\n      }\r\n    },\r\n    submitBtnMsg: 'Submit'\r\n  }\r\n\r\n  scope.productFormModal.func.onSubmit = () => {\r\n    const product = scope.productFormModal\r\n\r\n    if (!product.ingredient.applicators) {\r\n      utils.alert('warning', 'Warning', 'No material can be found on this product')\r\n      return\r\n    }\r\n\r\n    const selectedOperations = scope.productFormModal.ingredient.applicators.map(x => x.operation)\r\n    const setArr = Array.from(new Set(selectedOperations))\r\n    if (selectedOperations.length !== setArr.length) {\r\n      utils.alert('warning', 'Warning', '`The same operation CANNOT be selected TWICE!')\r\n      return\r\n    }\r\n\r\n    if (scope.products) {\r\n      if (utils.findProductById(scope.products, product.id).length !== 0) {\r\n        utils.alert('warning', 'Warning', `Product With Product ID \"${product.id}\" Already Exists`)\r\n        return\r\n      }\r\n\r\n      if (utils.findProductByDesc(scope.products, product.productDesc).length !== 0) {\r\n        utils.alert('warning', 'Warning', `Product With Product Description \"${product.productDesc}\" Already Exists`)\r\n        return\r\n      }\r\n    }\r\n\r\n    if (!isMaterialValid(product.ingredient, scope.materialsDataList)) { return }\r\n\r\n    apis.addProduct(\r\n      product,\r\n      utils.successCallBack('pct-product-form-cancelBtn', 'Product Has Been Added Successfully', scope),\r\n      e => utils.failCallBack('pct-product-form-cancelBtn', `An Error Occurr While Adding The Product Due To ${e}`)\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Data init for viewing product\r\n * @param {*} scope\r\n */\r\nconst viewPreprocess = scope => {\r\n  const cur = scope.currentProduct\r\n  scope.productFormViewModal = {\r\n    productGroup: cur.product_group,\r\n    productId: cur.id,\r\n    productDesc: cur.product_desc,\r\n    comment: cur.comment || '',\r\n    ingredient: cur.ingredient\r\n  }\r\n}\r\n\r\n/**\r\n * Data init for updating product\r\n * @param {*} scope\r\n */\r\nconst updatePreprocess = scope => {\r\n  const cur = utils.copy(scope.currentProduct)\r\n\r\n  scope.productFormModal = {\r\n    isTotalCalcOn: true,\r\n    productGroup: cur.product_group,\r\n    id: cur.id,\r\n    productDesc: cur.product_desc,\r\n    comment: cur.comment || '',\r\n    ingredient: cur.ingredient,\r\n    func: {\r\n      onAddApplicator: () => {\r\n        _onAddApplicator(scope)\r\n      },\r\n      onRemoveApplicator: () => {\r\n        const apps = scope.productFormModal.ingredient.applicators\r\n        apps.pop()\r\n        updateGramsTotalAccumulatively(scope.productFormModal)\r\n      },\r\n      onAddSubMaterial: (topId) => {\r\n        _onAddSubMaterial(scope, topId)\r\n      },\r\n      onRemoveSubMaterial: (id) => {\r\n        const apps = scope.productFormModal.ingredient.applicators\r\n        apps[id - 1].materials.pop()\r\n        updateGramsTotalAccumulatively(scope.productFormModal)\r\n        updateTargetNum(apps[id - 1])\r\n      },\r\n      onOperationChanged: (val, toGet) => {\r\n        return matchOperation(scope, val, toGet)\r\n      },\r\n      onScaleChanged: (applicator, key) => {\r\n        return getSumByKey(applicator, key, scope.productFormModal)\r\n      },\r\n      onTotalCheckChanged: () => {\r\n        updateGramsTotalAccumulatively(scope.productFormModal)\r\n      },\r\n      onMaterialChanged: (val) => {\r\n        return matchMaterial(scope, val)\r\n      },\r\n      toFixed: (val) => {\r\n        if (val === undefined || val === null) return\r\n        return Number(val.toFixed(2))\r\n      }\r\n    },\r\n    submitBtnMsg: 'Update'\r\n  }\r\n\r\n  scope.tempProductForm = utils.copy(scope.productFormModal)\r\n\r\n  scope.productFormModal.func.onSubmit = () => {\r\n    const product = scope.productFormModal\r\n    const match = utils.findProductById(scope.products, product.id)\r\n\r\n    // Check if make any changes\r\n    if (!utils.hasObjectChanged(scope.tempProductForm, product)) {\r\n      utils.alert('warning', 'Warning', 'You Did Not Make Any Changes On It')\r\n      return\r\n    }\r\n\r\n    // check if there is any operation selected twice\r\n    const selectedOperations = scope.productFormModal.ingredient.applicators.map(x => x.operation)\r\n    const setArr = Array.from(new Set(selectedOperations))\r\n    if (selectedOperations.length !== setArr.length) {\r\n      utils.alert('warning', 'Warning', 'The same operation CANNOT be selected TWICE!')\r\n      return\r\n    }\r\n\r\n    // Check if id is invalid\r\n    if (match.length !== 0) {\r\n      if (match[0].id !== cur.id) {\r\n        utils.alert('warning', 'Warning', `Product With Product ID \"${product.id}\" Already Exists`)\r\n        return\r\n      }\r\n    }\r\n\r\n    if (!isMaterialValid(product.ingredient, scope.materialsDataList)) { return }\r\n\r\n    apis.updateProduct(\r\n      cur.id,\r\n      scope.tempProductForm.ingredient,\r\n      product,\r\n      utils.successCallBack('pct-product-form-cancelBtn', 'Product Has Been Updated Successfully', scope),\r\n      e => utils.failCallBack('pct-product-form-cancelBtn', `An Error Occurr While Updating The Product Due To ${e}`)\r\n    )\r\n  }\r\n}\r\n\r\nexport const showAddProductFormModal = scope => {\r\n  addPreprocess(scope)\r\n  utils.showLargeModal('product_form.html', scope)\r\n}\r\n\r\nexport const showViewProductFormModal = scope => {\r\n  viewPreprocess(scope)\r\n  utils.showLargeModal('product_form_view.html', scope)\r\n}\r\n\r\nexport const showUpdateProductFormModal = scope => {\r\n  updatePreprocess(scope)\r\n  utils.showLargeModal('product_form.html', scope)\r\n}\r\n\r\nexport const removeProduct = scope => {\r\n  const id = scope.currentProduct.id\r\n  scope.confirmModal = {\r\n    confirmMsg: `Please confirm that you want to remove product ${id}`,\r\n    onConfirm: () => {\r\n      apis.removeProduct(\r\n        id,\r\n        utils.successCallBack('pct-confirm-modal-cancelBtn', `Product ${id} Has Been Removed Successfully`, scope),\r\n        e => utils.failCallBack('pct-confirm-modal-cancelBtn', `An Error Occurr While Removing The Product Due To ${e}`)\r\n      )\r\n    }\r\n  }\r\n  utils.showModal('confirm_modal.html', scope)\r\n}\r\n"]}