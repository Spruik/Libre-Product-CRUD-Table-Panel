{"version":3,"sources":["../src/product_group_form.js"],"names":["utils","apis","addPreprocess","scope","productGroupFormModal","groupName","action","onSubmit","addProductGroup","successCallBack","failCallBack","e","updatePreprocess","toBeUpdated","productGroups","onUpdate","alert","confirmModal","confirmMsg","onConfirm","updateProductGroup","showModal","removePreprocess","toBeRemoved","onRemove","removeProductGroup","showAddProductGroupFormModal","showUpdateProductGroupFormModal","showRemoveProductGroupFormModal"],"mappings":"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","file":"product_group_form.js","sourcesContent":["import * as utils from './utils'\r\nimport * as apis from './apis'\r\n\r\nconst addPreprocess = scope => {\r\n  scope.productGroupFormModal = {\r\n    groupName: '',\r\n    action: 'add'\r\n  }\r\n\r\n  scope.productGroupFormModal.onSubmit = () => {\r\n    apis.addProductGroup(\r\n      scope.productGroupFormModal.groupName,\r\n      utils.successCallBack('pct-product-group-form-cancelBtn', 'Brand Product Line Has Been Added Successfully', scope),\r\n      e => utils.failCallBack('pct-product-group-form-cancelBtn', `An Error Occurr While Adding The Brand Product Line Due To ${e}`)\r\n    )\r\n  }\r\n}\r\n\r\nconst updatePreprocess = scope => {\r\n  scope.productGroupFormModal = {\r\n    groupName: '',\r\n    action: 'update',\r\n    toBeUpdated: scope.productGroups[0] || ''\r\n  }\r\n\r\n  scope.productGroupFormModal.onUpdate = () => {\r\n    const toBeUpdated = scope.productGroupFormModal.toBeUpdated\r\n    const groupName = scope.productGroupFormModal.groupName\r\n    if (groupName === '') {\r\n      utils.alert('warning', 'Warning', 'The new group name cannot be empty')\r\n    } else if (toBeUpdated === groupName) {\r\n      utils.alert('warning', 'Warning', 'The new group name is the same with the original one')\r\n    } else {\r\n      // Validation OK!\r\n      scope.confirmModal = {\r\n        confirmMsg: \"Please note that after changing the name of this brand product line, all its children's brand product line name will also be changed\",\r\n        onConfirm: () => {\r\n          apis.updateProductGroup(\r\n            scope,\r\n            toBeUpdated,\r\n            groupName,\r\n            utils.successCallBack('pct-confirm-modal-cancelBtn', 'Brand Product Line Has Been Updated Successfully', scope),\r\n            e => utils.failCallBack('pct-confirm-modal-cancelBtn', `An Error Occurr While Updating The Brand Product Line Due To ${e}`)\r\n          )\r\n        }\r\n      }\r\n      utils.showModal('confirm_modal.html', scope)\r\n    }\r\n  }\r\n}\r\n\r\nconst removePreprocess = scope => {\r\n  scope.productGroupFormModal = {\r\n    action: 'remove',\r\n    toBeRemoved: scope.productGroups[0] || ''\r\n  }\r\n\r\n  scope.productGroupFormModal.onRemove = () => {\r\n    const toBeRemoved = scope.productGroupFormModal.toBeRemoved\r\n    scope.confirmModal = {\r\n      confirmMsg: 'Please note that after removing this brand product line, all its children will also be removed',\r\n      onConfirm: () => {\r\n        apis.removeProductGroup(\r\n          toBeRemoved,\r\n          utils.successCallBack('pct-confirm-modal-cancelBtn', 'Brand Produt Line Has Been Removed Successfully', scope),\r\n          e => utils.failCallBack('pct-confirm-modal-cancelBtn', `An Error Occurr While Removing The Brand Product Line Due To ${e}`)\r\n        )\r\n      }\r\n    }\r\n    utils.showModal('confirm_modal.html', scope)\r\n  }\r\n}\r\n\r\nexport const showAddProductGroupFormModal = scope => {\r\n  addPreprocess(scope)\r\n  utils.showModal('product_group_form.html', scope)\r\n}\r\n\r\nexport const showUpdateProductGroupFormModal = scope => {\r\n  updatePreprocess(scope)\r\n  utils.showModal('product_group_form.html', scope)\r\n}\r\n\r\nexport const showRemoveProductGroupFormModal = scope => {\r\n  removePreprocess(scope)\r\n  utils.showModal('product_group_form.html', scope)\r\n}\r\n"]}