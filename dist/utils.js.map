{"version":3,"sources":["../src/utils.js"],"names":["appEvents","hostname","window","location","postgRestHost","influxHost","post","url","line","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","handleResponse","setRequestHeader","onerror","e","send","readyState","status","responseText","remove","statusText","get","res","JSON","parse","update","alert","type","title","msg","emit","showModal","html","data","src","modalClass","model","spaceCheck","str","length","slice"],"mappings":"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","file":"utils.js","sourcesContent":["import { appEvents } from 'app/core/core'\n\nconst hostname = window.location.hostname\nconst postgRestHost = 'http://' + hostname + ':5436/'\nconst influxHost = 'http://' + hostname + ':8086/'\n\nlet post = (url, line) => {\n    return new Promise((resolve, reject) => {\n      var xhr = new XMLHttpRequest()\n      xhr.open('POST', url)\n      xhr.onreadystatechange = handleResponse\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.onerror = e => reject(e)\n      xhr.send(line)\n  \n      function handleResponse () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            // console.log('200');\n            resolve(xhr.responseText)\n          } else if (xhr.status === 204) {\n            // console.log('204');\n            resolve(xhr.responseText)\n          } else if (xhr.status === 201) {\n            resolve(xhr.responseText)\n          } else {\n            reject(xhr.responseText)\n          }\n        }\n      }\n    })\n  }\n\n  let remove = (url) => {\n    return new Promise((resolve, reject) => {\n      var xhr = new XMLHttpRequest()\n      xhr.open('DELETE', url)\n      xhr.onreadystatechange = handleResponse\n      xhr.onerror = e => reject(e)\n      xhr.send()\n  \n      function handleResponse () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            // console.log('200');\n            resolve(xhr.responseText)\n          } else if (xhr.status === 204) {\n            // console.log('204');\n            resolve(xhr.responseText)\n          } else {\n            reject(this.statusText)\n          }\n        }\n      }\n    })\n  }\n\n  let get = url => {\n    return new Promise((resolve, reject) => {\n        var xhr = new XMLHttpRequest()\n        xhr.open('GET', url)\n        xhr.onreadystatechange = handleResponse\n        xhr.onerror = e => reject(e)\n        xhr.send()\n\n        function handleResponse () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n            var res = JSON.parse(xhr.responseText)\n            resolve(res)\n            } else {\n            reject(this.statusText)\n            }\n        }\n        }\n    })\n  }\n\n  let update = (url, line) => {\n    return new Promise((resolve, reject) => {\n      var xhr = new XMLHttpRequest()\n      xhr.open('PATCH', url)\n      xhr.onreadystatechange = handleResponse\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.onerror = e => reject(e)\n      xhr.send(line)\n  \n      function handleResponse () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            // console.log('200');\n            resolve(xhr.responseText)\n          } else if (xhr.status === 204) {\n            // console.log('204');\n            resolve(xhr.responseText)\n          } else if (xhr.status === 201) {\n            resolve(xhr.responseText)\n          } else {\n            reject(xhr.responseText)\n          }\n        }\n      }\n    })\n  }\n\n  const alert = (type, title, msg) => {\n    appEvents.emit('alert-' + type, [title, msg])\n  }\n\n  const showModal = (html, data) => {\n    appEvents.emit('show-modal', {\n      src: 'public/plugins/smart-factory-products-crud-table-panel/partials/' + html,\n      modalClass: 'confirm-modal',\n      model: data\n    })\n  }\n\n  export const spaceCheck = str => {\n    if (str[str.length - 1] === ' ') {\n      str = str.slice(0, -1)\n      return spaceCheck(str)\n    }\n    return str\n  }\n\n  export { post, get, postgRestHost, influxHost, alert, showModal, remove, update }"]}